/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#define HOST_OS 2

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "../zmk-nodefree-config/helper.h"
#include "../zmk-nodefree-config/international_chars/norwegian.dtsi"


&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <200>;
};


/ { 
    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
        
         combo_tab {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp TAB>;
        };
        
        combo_ralt {
            timeout-ms = <50>;
            key-positions = <17 16>;
            bindings = <&kp RALT>;
        };
 
        combo_lalt {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp LALT>;
        };
        
        combo_lgui {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp LGUI>;
        };
        
        
       combo_rgui {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp RGUI>;
        };
    };


    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        td_comma: tapdance_comma {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPDANCE_COMMA";
            #binding-cells = <0>;
            tapping-term-ms = <190>;
            bindings = <&kp CMMA>, <&kp SCLN>;
        };
        td_colon: tapdance_colon {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPDANCE_COLON";
            #binding-cells = <0>;
            tapping-term-ms = <190>;
            bindings = <&kp DOT>, <&kp COLN>;
        };
        td_a: tapdance_a {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPDANCE_A";
            #binding-cells = <0>;
            tapping-term-ms = <190>;
            bindings = <&kp A>, <&no_aa>;
        };
    };


    keymap {
        compatible = "zmk,keymap";
 
   		default_layer {
		    bindings = <
		    &kp Q &kp W &kp E &kp R &kp T 						&kp Y &kp U  &kp I    &kp O   &kp P 
		    &td_a &kp S &hm LALT D &hm LGUI F &kp G 			&kp H &kp J  &kp K    &kp L   &kp BKSP
		    &mt LCMD Z &mt RALT X &kp C &kp V &kp B				    &kp N &kp M  &td_comma   &td_colon  &to 1
          	        &mt LC(LA(LCMD)) SPC &sk LSHIFT             &sk RCTRL &mt LS(RALT) RET
		    >;
		};

   		left_layer {
		    bindings = <
		    &kp N1  &kp N2    &kp N3    &kp N4    &kp N5		       &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 
		    &kp TAB    &kp LC(S)    &kp DQT      &kp PIPE2     &kp HASH 		   &kp MINUS &kp EQL  &kp LBKT &kp RBKT  &kp DEL 
		    &kp ESC    &kp TILDE 	&kp NON_US_BSLH &kp NON_US_HASH  &kp TILDE2    &kp MINUS &kp GRAVE &kp SCLN &kp COLN  &to 2
					        &to 0  &sk LSHIFT					                   &sk RALT &kp RET
		    >;
		};

		right_layer {
		    bindings = <
		    &kp BANG  &kp ATSN &kp HASH  &kp DLLR  &kp PRCT    			&kp CRRT  &kp AMPS &kp KMLT &kp LPRN &kp RPRN 
		    &kp HASH  &kp QMARK  &kp FSLH  &kp COLN  &kp SCLN 			&kp MINUS &kp KP_EQUAL  &kp LBRC  &kp RBRC   &kp BKSP
		    &kp LSFT  &kp KPLS &kp LBKT &kp RBKT   &kp BSLH    			&kp UNDER &kp LEFT &kp DOWN &kp UP  &to 3
					      &to 0 &sk LGUI  				                &sk RALT &kp RET
		    >;
		};	

		tri_layer {
		    bindings = <
		    &kp NUM_1  &kp NUM_2    &kp NUM_3    &kp NUM_4    &kp NUM_5 		&trans &trans   &trans   &trans  &trans
		    &kp F1 &kp F2 &kp F3 &kp F4 &kp F5  						        &trans &kp PG_UP  &kp K_VOL_UP &kp K_MUTE &trans 
		    &bt BT_CLR  &bt BT_NXT &bt BT_PRV &kp F6 &kp F7   				    &trans &kp PG_DN  &kp K_VOL_DN  &trans &to 4
					     &to 0  &trans  					                    &sk RALT  &kp RET
		    >;
		};	
        
	};
};
