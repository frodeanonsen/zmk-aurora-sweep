/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#define HOST_OS 2

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "../zmk-nodefree-config/helper.h"
#include "../zmk-nodefree-config/international_chars/norwegian.dtsi"


&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <200>;
};


/ { 
    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
        
         combo_tab {
            timeout-ms = <50>;
            key-positions = <3 4>;
            bindings = <&kp TAB>;
        };
        
        combo_layer3 {
            timeout-ms = <50>;
            key-positions = <23 24>;
            bindings = <&mo 3>;
        };
    };


    keymap {
      compatible = "zmk,keymap";
 
   		default_layer {
		    bindings = <
		    &kp Q           &kp W       &kp E     &kp R     &kp T 			&kp Y       &kp U       &kp I      &kp O       &kp P 
		    &kp A           &kp S       &kp D     &kp F     &kp G 			&kp H       &kp J       &kp K      &kp L       &kp BKSP
		    &mt LCTRL Z     &mt RALT X  &lt 4 C   &lt 2 V   &lt 1 B     &kp N       &kp M       &kp COMMA  &kp DOT     &to 1
          	                          &mt LSHIFT SPC    &sk LCMD    &kp RCTRL   &kp RET
		    >;
		  };

   		code_layer {
		    bindings = <
		    &kp UNDER           &kp MINUS   &kp PLUS    &kp EQUAL   &kp SLASH       &kp SQT     &kp DQT     &kp GRAVE   &no_oe      &kp PRCNT 
		    &kp HASH            &kp STAR    &kp DOLLAR  &kp QMARK   &kp BSLH 	      &kp LEFT    &kp DOWN    &kp UP      &kp RIGHT   &kp DEL 
		    &mt LSHIFT TILDE    &kp AT 	    &kp AMPS    &kp LPRN    &kp PIPE        &kp LPRN    &kp RPRN    &kp SCLN    &kp COLN    &to 2
					                                        &kp LCTRL  &sk LCMD         &to 0   &kp RET
		    >;
		  };

   	  num_layer {
		    bindings = <
		    &kp N1            &kp N2      &kp N3      &kp N4    &kp N5                    &kp N6    &kp N7     &kp N8    &kp N9   &kp N0 
		    &kp TAB           &kp LC(S)   &kp DQT      &kp PIPE2     &kp PIPE 		        &kp HOME  &kp PG_DN  &kp PG_UP &kp END  &kp BKSP 
		    &mt LSHIFT TILDE  &kp TILDE 	&kp NON_US_BSLH &kp NON_US_HASH  &kp TILDE2     &kp LBRC  &kp RBRC   &kp CMMA  &kp DOT  &to 3
					        &kp LCTRL  &sk LCMD					                                        &to 0  &kp RET
		    >;
		  };

		  media_layer {
		    bindings = <
		    &kp BANG  &kp ATSN &kp HASH  &kp DLLR  &kp PRCT    			&kp CRRT    &kp AMPS      &kp KMLT      &kp LPRN    &kp RPRN 
		    &kp HASH  &kp QMARK  &kp FSLH  &kp COLN  &kp SCLN 			&kp K_MUTE  &kp K_VOL_DN  &kp K_VOL_UP  &kp RBRC    &kp BKSP
		    &kp LSFT  &kp KPLS &kp LBKT &kp RBKT   &kp BSLH    			&kp LBKT    &kp RBKT      &kp DOWN      &kp UP      &to 4
					                              &kp LCTRL &sk LGUI      &to 0   &kp RET
		    >;
		  };	

		  no_layer {
		    bindings = <
		    &kp ESC &trans  &no_ae  &trans  &trans                  &trans  &trans  &trans  &no_oe  &trans
		    &no_aa  &trans  &trans  &trans  &trans           		    &trans  &trans  &trans  &trans  &trans
		    &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &to 5
					                   &kp LCTRL  &trans      					  &to 0   &kp RET
		    >;
		  }

      bt_layer {
		    bindings = <
		    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans &trans &trans &trans &trans
		    &trans        &trans        &trans        &trans        &trans          &trans &trans &trans &trans &trans
        &bt BT_CLR    &trans        &trans        &trans        &trans          &trans &trans &trans &trans &trans
					                                              &trans  &trans          &to 0   &trans
		    >;
		  };	
        
	};
};

